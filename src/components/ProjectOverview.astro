---
import SecondaryButton from "./buttons/SecondaryButton.astro";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
interface Props {
  slug: string;
  title: string;
  description: string;
  tags: Array<string>;
  image: { alt: string; url: string };
  githubLink: string | undefined;
  projectLink: string | undefined;
}
const { slug, title, description, tags, image, githubLink, projectLink } =
  Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/*.{jpeg,jpg,png,gif}"
);
if (!images[image.url])
  throw new Error(
    `"${image.url}" does not exist in glob: "src/images/*.{jpeg,jpg,png,gif}"`
  );
---

<div class="grid grid-cols-3 gap-x-10 pt-6 w-full">
  <a
    href=`/projects/${slug}`
    class="min-w-40 self-center hidden sm:block transition hover:scale-90"
  >
    <span class="sr-only">{image.alt}</span>

    <Image class="rounded-lg" src={images[image.url]()} alt={image.alt} />
  </a>
  <div class="flex gap-x-6 w-full col-span-3 sm:col-span-2">
    <div class="flex flex-col w-full gap-y-2">
      <div class="flex gap-x-3 items-center justify-between sm:justify-start">
        <a href=`/projects/${slug}`>
          <h3 class="underline-link">{title}</h3>
        </a>
        <div class="flex gap-x-3">
          {
            githubLink && (
              <a href={githubLink} target="_blank">
                <span class="sr-only">
                  icon with link to {title} github repo
                </span>
                <svg
                  role="img"
                  class="fill-ghost-white hover:fill-levender-white w-5 h-5"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <>
                    <title>GitHub</title>
                    <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12" />
                  </>
                </svg>
              </a>
            )
          }
          {
            projectLink && (
              <a href={projectLink} target="_blank">
                <span class="sr-only">
                  icon with link to live deployment of {title}{" "}
                </span>

                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="2"
                  stroke="currentColor"
                  class="stroke-ghost-white hover:stroke-levender-white w-5 h-5"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M13.5 6H5.25A2.25 2.25 0 0 0 3 8.25v10.5A2.25 2.25 0 0 0 5.25 21h10.5A2.25 2.25 0 0 0 18 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"
                  />
                </svg>
              </a>
            )
          }
        </div>
      </div>
      <div class="flex gap-1 flex-wrap">
        {
          tags.map((tag) => (
            <SecondaryButton href={`/projects-tags/${tag}`}>
              <p class="text-xs">#{tag}</p>
            </SecondaryButton>
          ))
        }
      </div>
      <div class="flex flex-col">
        <p class="truncate text-sm max-w-lg sm:max-w-sm">{description}</p>
        <a class="underline text-sm" href=`/projects/${slug}`>Read more</a>
      </div>
    </div>
  </div>
</div>
